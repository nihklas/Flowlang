// Return type definition is not final
func generateAdder(base: int) func(int) int {
    // function expression 
    const anon = func(a: int, b: int) int {
        return a + b;
    }

    // function expression with closure
    const anon_clos = func(a: int, b: int) use (base) int {
        return a + b + base;
    }

    // inner function declaration with closure
    func adder(a: int) use (base) int {
        return base + a;
    }

    return adder;
}

func useAdder(adder: func(int) int) int {
    return adder(1);
}

const adder1: func(int) int = generateAdder(1);
const adder2 = generateAdder(2);

const adders: []func(int) int = [
    adder1,
    adder2
];

print(adder1(5));
print(adder2(5));
print(useAdder(adder1));

